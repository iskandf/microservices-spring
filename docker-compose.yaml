version: '3'
services:
  eureka-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - spring-net


  movie-catalog-service:
    build:
      context: ./movie-catalog-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - spring-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://host.docker.internal:8761/eureka/

  movie-info-service:
    build:
      context: ./movie-info-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - spring-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://host.docker.internal:8761/eureka/

  ratings-data-service:
    build:
      context: ./rating-data-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
      - '5005:5005'
    networks:
      - spring-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://host.docker.internal:8761/eureka/
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005

  postgres-db: # New PostgreSQL service
    image: postgres:latest
    ports:
      - "5432:5432"  # Map container port to host port
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: service-database
    networks:
      - spring-net

networks:
  spring-net:
    driver: bridge
